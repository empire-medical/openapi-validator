info:
  title: example api
  version: '1'
  contact:
    name: me
    url: some-url.com
    email: me@some.com
tags:
  -
    name: someTag
paths:
  /v1/books:
    get:
      operationId: getBooksWithReference
      responses:
        '200':
          description: Fetch list of books
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    nullable: false
                    example: "Vulcan lives"
                  nestedObj:
                    $ref: "#/components/schemas/nestedObj"
  /v2/books:
    get:
      operationId: referenceInReference
      responses:
        '200':
          description: Fetch list of books
          content:
            application/json:
              schema:
                type: object
                required:
                  - nestedObj
                properties:
                  nestedObj:
                     $ref: "#/components/schemas/nestedObj2"
  /v3/books:
    get:
      operationId: schemaAsReference
      responses:
        '200':
          description: Fetch list of books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nestedObj"
  /v4/books:
    get:
      operationId: responseAsRef
      responses:
        '200':
          $ref: '#/components/responses/someResponse'
  /v5/books:
    get:
      operationId: nullableReference
      responses:
        '200':
          description: Fetch list of books
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    nullable: false
                    example: "Vulcan lives"
                  nestedObj:
                    nullable: true
                    $ref: "#/components/schemas/nestedObj"
components:
  schemas:
    nestedObj:
      type: object
      required:
        - tag
      properties:
        tag:
          type: string
          example: "foo"
    nestedObj2:
      type: object
      required:
        - nested
      properties:
        nested:
          $ref: "#/components/schemas/nestedObj"
  responses:
    someResponse:
      description: "200 response"
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
openapi: 3.0.0
